[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tinyagent"
version = "0.3.0"
description = "A streamlined framework for building powerful LLM-powered agents"
requires-python = ">=3.8"
authors = [{name = "tinyagent", email = "contact@example.com"}]
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core dependencies
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "openai>=1.0.0",        # Used for LLM interactions
    "pyyaml>=6.0.1",        # For configuration loading
    "jinja2>=3.1.2",        # For templating
    "click>=8.1.6",         # For CLI functionality
    "rich>=13.7.1",         # For rich terminal output
    "jsonschema>=4.10.3",   # For schema validation
    "typing-extensions>=4.10.0", # For advanced type hints
    "colorama>=0.4.6",      # For colored terminal output
    "markupsafe>=2.1.5",    # For safe string handling
    "regex>=2023.0.0",      # For advanced regex pattern matching
    
    # Data processing
    "numpy>=1.26.4",        # For numerical processing
    "pandas>=2.0.0",        # For data manipulation (optional)
    
    # Web content processing
    "beautifulsoup4>=4.12.3", # For HTML parsing
    "lxml>=5.2.1",          # For XML/HTML processing
    "aiohttp>=3.9.0",       # For async HTTP requests
    "urllib3>=2.0.7",       # For HTTP utilities
]

[project.optional-dependencies]
# Development tools
dev = [
    "pytest>=7.0.0",        # For testing
    "black>=23.0.0",        # For code formatting
    "isort>=5.10.0",        # For import sorting
    "mypy>=1.0.0",          # For type checking
    "flake8>=5.0.0",        # For linting
    "pytest-cov>=4.0.0",    # For test coverage
    "pre-commit>=3.0.0",    # For git hooks
    "tox>=4.0.0",           # For testing in multiple environments
]

# Additional LLM providers
llm = [
    "anthropic>=0.5.0",     # For Claude models
    "cohere>=4.0.0",        # For Cohere models
    "google-generativeai>=0.2.0", # For Google AI models
    "groq>=0.3.0",          # For Groq models
]

# Full features including all optional components
full = [
    "tinyagent[dev,llm]",
    "matplotlib>=3.6.3",    # For visualization
    "seaborn>=0.13.0",      # For statistical visualization
    "scikit-learn>=1.3.0",  # For ML utilities
    "fastapi>=0.100.0",     # For API creation
    "uvicorn>=0.24.0",      # For ASGI server
]

[project.urls]
"Homepage" = "https://github.com/tinyagent/tinyagent"
"Bug Tracker" = "https://github.com/tinyagent/tinyagent/issues"
"Documentation" = "https://github.com/tinyagent/tinyagent/blob/main/README.md"

[project.scripts]
tinyagent = "tinyagent.main:main"

[tool.setuptools]
packages = ["tinyagent"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"